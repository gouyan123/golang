package main

import "fmt"

func main()  {
	/*切片实质：切片就是数组的引用，指向[low:high:max]中的low，low为数组的下标 长度len=high-low
	* cap=max-low
	*/
	/*-------------------切片的长度和容量----------------------------------------------*/
	a := []int{1,2,3,4,5}		/*定义切片a*/
	s := a[0:3:5]				/*对a进行切片，0 3代表下标[0,3)，5代表容量，长度=3-0=3*/
	fmt.Println("s = ",s)
	fmt.Println("len(s) = ",len(s))
	fmt.Println("cap(s) = ",cap(s))
	/*-------------------切片的创建------------------------------------------------------*/

	/*切片和数组的区别：
	* 数组：a := [5]int{}，数组的长度和容量不能改变，永远是5
	* 切片：s := [ ]int{}，切片的长度和容量可以改变
	*/
	/*①自动推导类型创建切片，同时初始化*/
	s1 := []int{}				/*声明并初始化切片 s*/
	fmt.Println(len(s1),cap(s1))
	s1 = append(s1,11)		/*给切片s末尾添加元素*/
	fmt.Println(len(s1),cap(s1))
	/*②make()函数创建切片，格式 make(切片类型,长度,容量)*/
	s2 := make([]int,3,5)
	fmt.Println(len(s2),cap(s2))
	/*-------------------切片的操作------------------------------------------------------*/
	/*截取原则 [low:high:max] 取下标从low开始的元素，取的长度 len=high-low，容量 cap=max-low*/
	/*-------------------切片与底层数组关系-----------------------------------------------*/
	/*切片就是底层数组的引用，会直接改变底层数组的值*/
	/*-------------------切片尾部追加内容append--------------------------------------------*/
	s3 := []int{}
	s3 = append(s3,1)
	s3 = append(s3,4)
	s3 = append(s3,7)
	fmt.Println(s3)
	/*cap(s3)求容量，len(s3)求长度*/
}
